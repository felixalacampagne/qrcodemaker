<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.felixalacampagne</groupId>
  <artifactId>accountqrcodemakergui</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>AccountQRCodeMakerGUI</name>
  <description>GUI for AccountQRCodeMaker</description>
     <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <maven.javadoc.skip>true</maven.javadoc.skip>
      <maven.build.timestamp.format>yy.MM.dd.HHmm</maven.build.timestamp.format>
      <timestamp>${build.localtime}</timestamp>
      <jackson-annotations-version>2.13.3</jackson-annotations-version>
      <nayuki-qrcodegen-version>1.5.0</nayuki-qrcodegen-version>
   </properties>
   <dependencies>
	   <dependency>
	      <groupId>com.fasterxml.jackson.core</groupId>
	      <artifactId>jackson-databind</artifactId>
	      <version>${jackson-annotations-version}</version>
	   </dependency>
		<dependency>
		  <groupId>io.nayuki</groupId>
		  <artifactId>qrcodegen</artifactId>
		  <version>${nayuki-qrcodegen-version}</version>
		</dependency>	   
   </dependencies>
   <build>
      <sourceDirectory>src</sourceDirectory>
      <plugins>
	      <plugin>
	        <artifactId>maven-compiler-plugin</artifactId>
	        <version>3.8.1</version>
	        <configuration>
	          <source>1.8</source>
	          <target>1.8</target>
	        </configuration>
	      </plugin>
	      
			<!-- This generates the final deliverable: an 'executable' a jar -->
			<plugin>
			   <artifactId>maven-assembly-plugin</artifactId>
			   <configuration>
			      <appendAssemblyId>false</appendAssemblyId>
			      <descriptorRefs>
			         <descriptorRef>jar-with-dependencies</descriptorRef>
			      </descriptorRefs>
			   </configuration>
			   <!-- This magic means the combined jar is built as part of the 
			        normal 'clean install' build of the parent project (see FLACtagger pom.xml for more details).
			        
			        The original project was used to produce a number of slightly different variations of the app
			        which allowed double click invocation in the appropriate mode, eg. QR of clipboard, QR EPC of
			        account information on the clipboard, GUI to enter transaction details and show QR.
			        Rather than mess with sub-projects etc. I just want to generate all variations each time
			        a build is performed. This is acheived by using multiple execution blocks with the different
			        configurations required for each app. According to the internet this is highly frowned upon
			        however it seems to work like a charm!!
			   -->
			   <executions>
			      <execution>
			         <id>make-AccountQRMakerGUI</id>
			         <phase>package</phase>
			         <goals><goal>single</goal></goals>
		            <configuration>
		               <archive>
		                  <manifest>
		                     <mainClass>com.felixalacampagne.qrcodemaker.AccountQRMakerGUI</mainClass>
		                  </manifest>
		               </archive>
		               <finalName>../AccountQRMakerGUI</finalName>
		            </configuration>			         
			      </execution>
               <execution>
                  <id>make-AccountQRMaker</id>
                  <phase>package</phase>
                  <goals><goal>single</goal></goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <mainClass>com.felixalacampagne.qrcodemaker.AccountQRMaker</mainClass>
                        </manifest>
                     </archive>
                     <finalName>../AccountQRMaker</finalName>
                  </configuration>                 
               </execution>			      
               <execution>
                  <id>make-QRCodeMaker</id>
                  <phase>package</phase>
                  <goals><goal>single</goal></goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <mainClass>com.felixalacampagne.qrcodemaker.QRCodeMakerGUI</mainClass>
                        </manifest>
                     </archive>
                     <finalName>../QRCodeMaker</finalName>
                  </configuration>                 
               </execution>               
			   </executions>
			</plugin>
      </plugins>
   </build>
</project>
